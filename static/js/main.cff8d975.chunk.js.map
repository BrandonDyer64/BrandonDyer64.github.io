{"version":3,"sources":["img/footer.png","img/kepler.png","img/alvm.png","img/viav.png","img/gitpromise.png","img/space-invaders.jpg","img/neural-network.png","img/zero.png","img/editor.png","logo.svg","components/Navbar.js","projects.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","components_Navbar","react_default","a","createElement","Navbar","bg","expand","variant","Container","Brand","href","Nav","className","style","color","target","index_esm","icon","MarkGithub","LogoGithub","projects","name","title","img","require","url","descriptionShort","attribution","DisplayCard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","project","Card","width","margin","Img","src","height","Body","Title","Text","float","Component","projectCards","map","Home_DisplayCard","Home","display","flexWrap","justifyContent","App","BrowserRouter","minHeight","Route","exact","path","component","backgroundImage","Footer","Row","Col","md","fontSize","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cff8d975.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/footer.2e7bc1f7.png\";","module.exports = __webpack_public_path__ + \"static/media/kepler.ebb3edab.png\";","module.exports = __webpack_public_path__ + \"static/media/alvm.474073e4.png\";","module.exports = __webpack_public_path__ + \"static/media/viav.92cbdedc.png\";","module.exports = __webpack_public_path__ + \"static/media/gitpromise.6b65c27f.png\";","module.exports = __webpack_public_path__ + \"static/media/space-invaders.093831d1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/neural-network.eb852984.png\";","module.exports = __webpack_public_path__ + \"static/media/zero.bad77b1a.png\";","module.exports = __webpack_public_path__ + \"static/media/editor.e76d2e5d.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  Container,\r\n  Navbar,\r\n  Nav,\r\n  NavDropdown,\r\n  Form,\r\n  FormControl\r\n} from \"react-bootstrap\";\r\n\r\nimport Octicon, { MarkGithub, LogoGithub } from \"@githubprimer/octicons-react\";\r\n\r\nexport default () => (\r\n  <Navbar bg=\"primary\" expand=\"lg\" variant=\"dark\">\r\n    <Container>\r\n      <Navbar.Brand href=\"/\">Brandon Dyer</Navbar.Brand>\r\n      <Nav className=\"justify-content-end\">\r\n        <a\r\n          href=\"https://github.com/BrandonDyer64\"\r\n          style={{ color: \"white\" }}\r\n          target=\"_blank\"\r\n        >\r\n          <Octicon icon={MarkGithub} />\r\n          &nbsp;\r\n          <Octicon icon={LogoGithub} />\r\n        </a>\r\n      </Nav>\r\n    </Container>\r\n  </Navbar>\r\n);\r\n","export default [\r\n  {\r\n    name: \"kepler\",\r\n    title: \"Kepler Engine\",\r\n    img: require(\"./img/kepler.png\"),\r\n    url: \"https://keplerengine.com\",\r\n    descriptionShort: \"Game Engine\"\r\n  },\r\n  {\r\n    name: \"alvm\",\r\n    title: \"ALVM\",\r\n    img: require(\"./img/alvm.png\"),\r\n    url: \"https://github.com/BrandonDyer64/ALVM\",\r\n    descriptionShort: \"AngelScript / Lua Virtual Machine\"\r\n  },\r\n  {\r\n    name: \"viav\",\r\n    title: \"Viav\",\r\n    img: require(\"./img/viav.png\"),\r\n    url: \"https://viav.app\",\r\n    descriptionShort: \"Discord Bot\"\r\n  },\r\n  {\r\n    name: \"gitpromise\",\r\n    title: \"Git Promise\",\r\n    url: \"https://www.npmjs.com/package/promise-for-git\",\r\n    img: require(\"./img/gitpromise.png\"),\r\n    descriptionShort: \"Convenience tool for Git repositories\"\r\n  },\r\n  {\r\n    name: \"weeds\",\r\n    title: \"Atmospheric Odyssey\",\r\n    img: require(\"./img/space-invaders.jpg\"),\r\n    descriptionShort: \"Android mobile game\"\r\n  },\r\n  {\r\n    name: \"nnbricks\",\r\n    title: \"NNBricks\",\r\n    img: require(\"./img/neural-network.png\"),\r\n    attribution:\r\n      \"Artificial Neural Network by sachin modgekar from the Noun Project\",\r\n    url: \"https://github.com/BrandonDyer64/nnbricks\",\r\n    descriptionShort: \"Simple self-playing video game using Machine Learning\"\r\n  },\r\n  {\r\n    name: \"zero\",\r\n    title: \"Zero Database\",\r\n    img: require(\"./img/zero.png\"),\r\n    url: \"https://github.com/BrandonDyer64/Zero-Legacy\",\r\n    descriptionShort: \"Business management software\"\r\n  },\r\n  {\r\n    name: \"editor\",\r\n    title: \"Node Editor\",\r\n    img: require(\"./img/editor.png\"),\r\n    url: \"https://github.com/BrandonDyer64/Editor\",\r\n    descriptionShort: \"Node based, graphical code editor\"\r\n  }\r\n];\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Button, Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport projects from \"../projects\";\r\n\r\nclass DisplayCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.props = props;\r\n    this.project = props.project;\r\n  }\r\n  render() {\r\n    return (\r\n      <Card style={{ width: \"18rem\", margin: \"1rem\" }}>\r\n        <Card.Img\r\n          variant=\"top\"\r\n          src={this.project.img}\r\n          style={{ width: \"18rem\", height: \"10rem\" }}\r\n          title={this.project.attribution}\r\n        />\r\n        <Card.Body>\r\n          <Card.Title>{this.project.title}</Card.Title>\r\n          <Card.Text>{this.project.descriptionShort}</Card.Text>\r\n          <a\r\n            href={this.project.url}\r\n            target=\"_blank\"\r\n            style={{ color: \"white\", float: \"right\" }}\r\n          >\r\n            Learn More →\r\n          </a>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nconst projectCards = projects.map(project => {\r\n  return <DisplayCard project={project} />;\r\n});\r\n\r\nexport default () => {\r\n  return (\r\n    <div\r\n      style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\" }}\r\n    >\r\n      {projectCards}\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./pages/Home\";\nimport logo from \"./logo.svg\";\nimport Footer from \"./img/footer.png\";\nimport \"./style/App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\" style={{ minHeight: \"100%\" }}>\n          <Navbar />\n          <Container>\n            <Route exact path=\"/\" component={Home} />\n          </Container>\n          <footer style={{ backgroundImage: \"url(\" + Footer + \")\" }}>\n            <Container>\n              <p>© 2019 Brandon Dyer</p>\n              <Row>\n                <Col md={8}>\n                  <p style={{ fontSize: \"8pt\" }}>\n                    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY\n                    KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE\n                    WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR\n                    PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\n                    OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n                    OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n                    OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n                    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n                  </p>\n                </Col>\n              </Row>\n            </Container>\n          </footer>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./style/index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}